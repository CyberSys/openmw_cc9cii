# extracting shaderpackage013.sdp

[Timeslip](http://timeslip.chorrol.com/)'s [ShaderEdit](http://timeslip.chorrol.com/current/ShaderEdit.7z)
might be able to extract them but the program keeps crashing - possibly due to it being an old 32bit program -
see [here](http://tesreloaded.com/thread/419/alenet-question-replacing-shaders?page=1) for more info.

For now just have to use the shaders provided by Alenett.  Running the editor in a Windows XP VM might work?

# Shader Package 13

~\Documents\My Games\Oblivion\renderInfo.txt

    Renderer Device Information:
    	NVIDIA Quadro P1000
    	nvldumd.dll
    	RenderPath         		: BSSM_SV_2_A
    	PSversion          		: 300
    	VSversion          		: 300
    	VStarget           		: vs_2_0
    	PStarget           		: ps_2_a
    	PS2xtarget         		: ps_2_a
    	maxPS20inst        		: 512
    	3.0 Shaders        		: yes
    	Image space effects		: yes
    	Nonpowerof2textures		: yes
    	FP16ARGB blending  		: yes
    	FP16ARGB filtering 		: yes
    	High dynamic range 		: yes
    	Bloom lighting     		: no
    	Refraction         		: yes
    	2.0 hair           		: yes
    	SLI mode           		: no
    	Water shader       		: yes
    	Water reflections  		: yes
    	Water displacement 		: yes
    	Water high res     		: no
    	Multisample Type   		: 0
    	Shader Package     		: 13

# shaders

[TES-Shaders](https://github.com/Alenett/TES-Shaders)

#[11/02/2020] SCM

## EGT

A binary file format containing texture statistics data for each pixel for each mode.

    char[8]       Magic number for this filetype: 'FREGT003'
    unsigned long Number of image rows (R)
    unsigned long Number of image columns (C)
    unsigned long Number of symmetric morph modes (S)
    unsigned long Number of asymmetric morph modes (A)
    unsigned long Texture Basis Version
    char[36]      Reserved
    <mode> * S    Symmetric texture modes. Where:
                  <mode> = float s, <image> r, <image> g, <image> b
                  Where s is the scale factor:
                  <image> = (signed char * R) * C
                  Multiplying each image component by s yields the RGB mode. Image is defined as left to right, and top to bottom.
    <mode> * A    Asymmetric texture modes.

**NOTE: TES4 does not use any Asymmetric texture modes.**

#[12/02/2020] head

`NPC_::RNAM` -> race -> NIF -> TRI, EGM, EGT (also `_50` variants for LOD)
`NPC_::MODL` -> skeletal model
`NPC_::ACBS` -> gender --------------------+
`NPC_::FGGS` -> FaceGen symmetric -> age? -+--> detail texture & normal
`NPC_::FGGA` -> FaceGen asymmetric
`NPC_::FGTS` -> FaceGen symmetric texture modes
`NPC_::FormId` -> faces texture
`NPC_::FNAM` -> FaceGen race (maybe offset?) - unused

## custom material

For a head mesh, e.g. `characters\imperial\headhuman.nif`, we use the associated headhuman.tri, headhuman.egm
files as well as the FGGS/FGGA sub records from `NPC_` record to morph the mesh before instantiating the mesh.
The function signature currently looks like below where the morphed mesh is passed as `vertices`:

    void instantiate(Ogre::SkeletonPtr skeleton, const std::string& npcName, std::vector<Ogre::Vector3>& vertices);

Similarly, headhuman.dds, headhuman_n.dds, headhuman.egt, the age/gender based texture files (e.g.
headhumanm60.dds and headhumanm60_n.dds), `faces\oblivion.esm\<formId>_0.dds`, `faces\oblivion.esm\<formId>_1.dds`
as well as FGTS sub record from `NPC_` record are used to create custom texture set for skinning the mesh.
The function signature will need to be modified to allow a material parameter to be passed in.

## Age/Gender

The gender is derived from ESM4::ActorBaseConfig.flags (TES4) or ESM4::Npc::ACBS.flags (TES5).

Currently it is unclear how the age can be derived.  FGGS and FGTS values change when the age slider is moved
using the Construction Set.

    Uriel.esp - 64.000 years old
    Uriel2.esp - around 45.62 years old
    uriel_old.exp - around 42.01 years old
    uriel-tex.esp

    63.f == 0x427c0000
    64.f == 0x42800000
    65.f == 0x42820000

**NOTE: in the TES Construction Set "NPC" Object Window, use the ">" arrow to click "Face Advanced" tab before
clicking the "Face" tab (else may crash)**

## faces

Not sure how to incorporate the face textures for each of the NPCs.

## LOD

Not sure how to setup Ogre with LOD, including the use of low poly mesh and MipMaps.

#[13/02/2020] SCM success

It turns out that ECM images are row-major but starting from bottom left corner.  Once that was taken into
account the face textures look fine.

Still to figure out the faces texture and how to use the detail texture (looks blotchy on Uriel Septim)

The detail texture appears a little better if an average of the 3 colours are used as the modulation factor.

The faces texture seems to be a detail map - so modulating the textures then multiplying by 2 (to brighten)
seems to work.

[//]: # (/* vim: set ft=markdown tw=110: */)
